{"version":3,"sources":["Receipe.js","App.js","reportWebVitals.js","index.js","Receipe.module.css"],"names":["Recipe","title","calories","img","ingredients","className","style","recepie","map","item","text","src","alt","App","useState","recipes","setRecipes","search","setSearch","query","setQuery","useEffect","getRequest","a","fetch","response","json","data","hits","console","log","onSubmit","e","preventDefault","type","value","onChange","target","recipe","label","image","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"qQAoBeA,EAnBA,SAAC,GAAqC,IAApCC,EAAmC,EAAnCA,MAAMC,EAA6B,EAA7BA,SAASC,EAAoB,EAApBA,IAAIC,EAAgB,EAAhBA,YACpC,OACI,mCACA,sBAAKC,UAAWC,IAAMC,QAAtB,UACA,mBAAGF,UAAWC,IAAML,MAApB,SAA4BA,IAC5B,6BAESG,EAAYI,KAAI,SAACC,GAAD,OACb,6BAAKA,EAAKC,YAKtB,4BAAIR,IACJ,qBAAKS,IAAKR,EAAKS,IAAI,eCqCRC,EAhDH,WACV,MAA6BC,mBAAS,IAAtC,mBAAOC,EAAP,KAAeC,EAAf,KACA,EAA0BF,mBAAS,IAAnC,mBAAOG,EAAP,KAAcC,EAAd,KACA,EAAyBJ,mBAAS,WAAlC,mBAAOK,EAAP,KAAaC,EAAb,KAIAC,qBAAU,WACRC,MACA,CAACH,IAEH,IAAMG,EAAU,uCAAG,8BAAAC,EAAA,sEACMC,MAAM,mCAAD,OAAoCL,EAApC,mBAPhB,WAOgB,oBANd,qCAKG,cACXM,EADW,gBAEEA,EAASC,OAFX,OAEXC,EAFW,OAGjBX,EAAWW,EAAKC,MAChBC,QAAQC,IAAIH,EAAKC,MAJA,2CAAH,qDAiBf,OAEC,sBAAKvB,UAAU,MAAf,UACA,uBAAMA,UAAU,cAAc0B,SARZ,SAACC,GACnBA,EAAEC,iBACFb,EAASH,IAMT,UACE,uBAAOiB,KAAK,OAAO7B,UAAU,YAAY8B,MAAOlB,EAAQmB,SAdvC,SAACJ,GACpBd,EAAUc,EAAEK,OAAOF,OACnBN,QAAQC,IAAIE,EAAEK,OAAOF,UAanB,wBAAQD,KAAK,SAAb,uBAEF,qBAAK7B,UAAU,UAAf,SACCU,EAAQP,KAAI,SAAC8B,GAAD,OACZ,cAAC,EAAD,CAAQrC,MAAOqC,EAAOA,OAAOC,MACtBrC,SAAUoC,EAAOA,OAAOpC,SACxBC,IAAKmC,EAAOA,OAAOE,MACnBpC,YAAakC,EAAOA,OAAOlC,uBChCxBqC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K,kBCfAc,EAAOC,QAAU,CAAC,QAAU,yBAAyB,MAAQ,0B","file":"static/js/main.887a9837.chunk.js","sourcesContent":["import style from './Receipe.module.css';\r\nconst Recipe = ({title,calories,img,ingredients}) =>{\r\nreturn(\r\n    <>\r\n    <div className={style.recepie}>\r\n    <p className={style.title}>{title}</p>\r\n    <ol>\r\n        \r\n            {ingredients.map((item)=>(\r\n                <li>{item.text}\r\n                </li>\r\n                ))}\r\n        \r\n    </ol>\r\n    <p>{calories}</p>\r\n    <img src={img} alt=\"img1\"/>\r\n    </div>\r\n    </>\r\n);\r\n}\r\nexport default Recipe;","import './App.css';\nimport React,{useEffect,useState} from 'react';\nimport Recipe from './Receipe';\n\nconst App = () =>{\n  const [recipes,setRecipes] = useState([]);\n  const [search,setSearch] =useState('');\n  const [query,setQuery] = useState('chicken');\n\n  const APP_ID =\"2e6793a6\";\n  const APP_KEY = \"3918785f7a9f8d53e00968502bdc882c\";\n  useEffect(()=>{\n    getRequest();\n  },[query]);\n\n  const getRequest = async () =>{\n    const response = await fetch(`https://api.edamam.com/search?q=${query}&app_id=${APP_ID}&app_key=${APP_KEY}`);\n    const data = await response.json();\n    setRecipes(data.hits);\n    console.log(data.hits);\n  }\n\n  const updateSearch = (e) =>{\n    setSearch(e.target.value);\n    console.log(e.target.value);\n\n  }\n  const updateQuery = (e)=>{\n    e.preventDefault();\n    setQuery(search);\n  } \n\n   return(\n    \n    <div className=\"App\">\n    <form className=\"search_form\" onSubmit={updateQuery}>\n      <input type=\"text\" className=\"seach_bar\" value={search} onChange={updateSearch}/>\n      <button type=\"submit\">Search</button>\n    </form>\n    <div className=\"recipes\">\n    {recipes.map((recipe)=>\n    (<Recipe title={recipe.recipe.label}\n            calories={recipe.recipe.calories}\n            img={recipe.recipe.image}\n            ingredients={recipe.recipe.ingredients}\n            />))\n    }\n    </div>\n    </div>\n    \n  );\n}\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"recepie\":\"Receipe_recepie__19_kP\",\"title\":\"Receipe_title__QMJTV\"};"],"sourceRoot":""}